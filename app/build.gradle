import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

def getNdkDir() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkDir = properties.getProperty('ndk.dir', null)

    if (ndkDir == null)
        throw new GradleException("NDK location not found. " +
                "Define location with ndk.dir in the local.properties file or with an " +
                "ANDROID_NDK_ROOT/NDK_ROOT/NDKROOT/NDK environment variable.")

    if (!ndkDir.endsWith('/'))
        ndkDir = ndkDir + File.separator;

    return ndkDir
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "org.stasmdemo.android"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 3
        versionName "1.2"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    task ndkBuild(type: Exec) {
        def ndkDir = getNdkDir()
        def ndkPath
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            ndkPath = ndkDir + 'ndk-build.cmd'
        } else {
            ndkPath = ndkDir + 'ndk-build'
        }
        commandLine ndkPath, '-j4', '-C', file('src/main/jni').absolutePath
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.google.android.gms:play-services-ads:8.4.0'

    compile project(':openCVLibrary2411')
}
